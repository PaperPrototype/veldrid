<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!--
            TODO: Specifying the version here is required so that including the Veldrid.SPIRV package works.
            Why are we doing this and not using the version in modules? Because I don't want to compile the native libraries.
            Does this work? Yes.
            Is this hacky? Definitely, but hopefully we won't need to do this when we move to a custom glslang release.
        -->
        <Version>4.8.0.0</Version>
        <AssemblyName>Veldrid</AssemblyName>

        <NoWarn Condition="'$(Configuration)' == 'Debug'">1591</NoWarn>

        <DefineConstants>$(DefineConstants);VALIDATE_USAGE</DefineConstants>
        <DefineConstants Condition="'$(ExcludeD3D11)' == 'true'">$(DefineConstants);EXCLUDE_D3D11_BACKEND</DefineConstants>
        <DefineConstants Condition="'$(ExcludeVulkan)' == 'true'">$(DefineConstants);EXCLUDE_VULKAN_BACKEND</DefineConstants>
        <DefineConstants Condition="'$(ExcludeMetal)' == 'true'">$(DefineConstants);EXCLUDE_METAL_BACKEND</DefineConstants>
        <DefineConstants Condition="'$(ExcludeOpenGL)' == 'true'">$(DefineConstants);EXCLUDE_OPENGL_BACKEND</DefineConstants>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="TerraFX.Interop.Vulkan" Version="1.3.268" Condition="'$(ExcludeVulkan)' != 'true'" />

        <PackageReference Include="Vortice.D3DCompiler" Version="$(VorticeWindowsVersion)" Condition="'$(ExcludeD3D11)' != 'true'" />
        <PackageReference Include="Vortice.Direct3D11" Version="$(VorticeWindowsVersion)" Condition="'$(ExcludeD3D11)' != 'true'" />

        <ProjectReference Include="..\Veldrid.MetalBindings\Veldrid.MetalBindings.csproj" Condition="'$(ExcludeMetal)' != 'true'" />

        <ProjectReference Include="..\Veldrid.OpenGLBindings\Veldrid.OpenGLBindings.csproj" Condition="'$(ExcludeOpenGL)' != 'true'" />
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="D3D11/**/*" Condition="'$(ExcludeD3D11)' == 'true'" />
        <Compile Remove="Vk/**/*" Condition="'$(ExcludeVulkan)' == 'true'" />
        <Compile Remove="MTL/**/*" Condition="'$(ExcludeMetal)' == 'true'" />
        <Compile Remove="OpenGL/**/*" Condition="'$(ExcludeOpenGL)' == 'true'" />
    </ItemGroup>

    <ItemGroup Condition="'$(ExcludeMetal)' != 'true'">
        <EmbeddedResource Include="MTL/EmbeddedShaders/MTL_UnalignedBufferCopy_macOS.metallib">
            <LogicalName>MTL_UnalignedBufferCopy_macOS</LogicalName>
        </EmbeddedResource>

        <EmbeddedResource Include="MTL/EmbeddedShaders/MTL_UnalignedBufferCopy_iOS.metallib">
            <LogicalName>MTL_UnalignedBufferCopy_iOS</LogicalName>
        </EmbeddedResource>
    </ItemGroup>

    <PropertyGroup>
        <Description>A low-level, hardware-accelerated graphics and compute library for .NET, with backends for Vulkan, Metal, Direct3D 11, OpenGL, and OpenGL ES. Veldrid can be used to create high-performance 2D and 3D games, simulations, tools, and other graphical applications.</Description>
        <PackageTags>3D Graphics Direct3D DirectX Vulkan OpenGL Metal Core Standard Game</PackageTags>
    </PropertyGroup>

</Project>
